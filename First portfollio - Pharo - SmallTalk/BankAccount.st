Object subclass: #Account	instanceVariableNames: 'balance interestRate'	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!Account methodsFor: 'operation' stamp: 'dhanyaalrashid 10/28/2018 21:31'!" yearsUntilAmount: with a single argument called amount.  This method computes the predicted balance in a loop, increasing the year each time (starting from zero), until the balance reaches amount.  It should then return the number of years for that balance to be reached.  "yearsUntilAmount: amount	| temp |	temp := 0.	[ amount > (self predictBalanceAfterYears: temp) ] whileTrue: [ temp := temp + 1 ].	^temp.! !!Account methodsFor: 'operation' stamp: 'dhanyaalrashid 10/28/2018 21:29'!"Implementing a method on the  account class named predictBalanceAfterYears with a single argument called years.  This would return a prediction of the balance after a number of years"predictBalanceAfterYears: years 	^ (balance * ((1 + interestRate) raisedTo: years))! !!Account methodsFor: 'as yet unclassified ' stamp: 'dhanyaalrashid 10/28/2018 21:33'!"Creating a method  with a single argument called amount, which adds  amount to the balance. "credit: amount"Adding amount to balance"balance := balance + amount.! !!Account methodsFor: 'as yet unclassified ' stamp: 'dhanyaalrashid 10/23/2018 19:52'!"Create instance variable for iterestRate"iterestRate^ interestRate.! !!Account methodsFor: 'Accessing' stamp: 'dhanyaalrashid 10/23/2018 19:49'!"Create instance variable for balance"balance^ balance.! !Account subclass: #CurrentAccount	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!CurrentAccount methodsFor: 'as yet unclassified ' stamp: 'dhanyaalrashid 10/28/2018 21:36'!" Selecting the protocol operation and creating method debit"debit: amount"Creating single argument ammount, which subtracts ammount to balance"" if the balance is greater than 0 and will not become negative – otherwise, it does nothing. ""This if statement would return nothing if the balance will not become negative it would return nothing"balance >= amount ifTrue: [balance := balance - amount].! !!CurrentAccount methodsFor: 'initalize' stamp: 'dhanyaalrashid 10/23/2018 19:57'!"Initializing balance to 0 and interestRate as 0.005."initializebalance := 0.interestRate := 0.005.! !Account subclass: #SavingsAccount	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!SavingsAccount methodsFor: 'initalize' stamp: 'dhanyaalrashid 10/23/2018 19:58'!"Initializing balance to 0 and interestRate as 0.015."initializebalance := 0.interestRate := 0.015.! !